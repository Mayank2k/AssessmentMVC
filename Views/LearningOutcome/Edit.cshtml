@model AssessmentMVC.Models.LearningOutcome

@{
    ViewBag.Title = "Edit";

    dynamic topicID = Model != null ? Model.TopicID.ToString() : Request.QueryString["TopicID"];
    dynamic unitID = Model != null ? Model.Topic.UnitID.ToString() : Request.QueryString["UnitID"];
}

<h2>Edit Learning Outcome</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LearningOutcomeID)
        @Html.HiddenFor(model => model.TopicID)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.CreatedDate)

        <div class="form-group">
            @Html.Label("CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @*@Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.Label("UnitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UnitID", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @*@Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })*@
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TopicID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TopicID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TopicID, "", new { @class = "text-danger" })
            </div>
        </div>

         <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { rows = "6", cols = "100" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { TopicId = @topicID, UnitId = @unitID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
